<?php
/** @var \Mirasvit\Profiler\Block\Tab\Profiler $block */

$stat = $block->getStat();

/** @var \Mirasvit\Profiler\Helper\Format $format */
$format = $this->helper('Mirasvit\Profiler\Helper\Format');
?>
<div class="mirasvit-threshold" id="profiler-table-threshold">
    <div class="value"></div>
</div>

<table id="profiler-table" class="wide" data-threshold="#profiler-table-threshold">
    <thead>
    <tr>
        <th><?= __('Timer Id') ?></th>
        <th><?= __('Time (ms)') ?></th>
        <th><?= __('Avg (ms)') ?></th>
        <th><?= __('Cnt') ?></th>
    </tr>
    </thead>
    <tbody>
    <?php $idx = 0 ?>
    <?php foreach ($stat->getFilteredTimerIds() as $timerId): ?>
        <tr data-tt-id="<?= $timerId ?>" data-tt-parent-id="<?= $this->getParentTimerId($timerId) ?>"
            data-threshold-value="<?= $stat->fetch($timerId, 'sum') * 1000 ?>">
            <td>
                <?= $this->renderTimerId($stat->fetch($timerId, 'id')) ?>
            </td>
            <td class="number">
                <?= $format->formatTime($stat->fetch($timerId, 'sum')) ?>
                <div class="timer-line" style="width: <?= $block->getTimerLength($timerId) ?>%;"></div>
            </td>
            <td class="number"><?= $format->formatTime($stat->fetch($timerId, 'avg')) ?></td>
            <td class="number"><?= $stat->fetch($timerId, 'count') ?></td>
        </tr>
    <?php endforeach ?>
    </tbody>
</table>
<script>
    require([
        'jquery',
        'Mirasvit_Profiler/js/table'
    ], function ($) {
        $('#profiler-table').profilerTable({});
    });
    //    require([
    //        'jquery',
    //        'jquery/ui',
    //        'Mirasvit_Profiler/js/lib/jquery.treetable',
    //        'Mirasvit_Profiler/js/lib/jquery.tablesorter',
    //        'Mirasvit_Profiler/js/lib/jquery.filtertable'
    //    ], function ($) {
    //        var $table = $('#profiler-table');
    //        $table.treetable({expandable: true});
    //        $table.tablesorter({});
    //
    //        $table.filterTable({
    //            callback: function (term, table) {
    //                $table.treetable('expandAll');
    //            }
    //        });
    //
    //        $table.bind("sortStart", function () {
    //            $table.treetable('expandAll');
    //        });
    //
    //        $('#profiler-threshold').slider({
    //            min: 0,
    //            value: 0,
    //            max: <?//=$block->getTotalTime() * 1000 ?>//,
    //            slide: function (event, ui) {
    //                $table.treetable('expandAll');
    //                $('[data-filtrable]', $table).each(function (i, td) {
    //                    var value = $(td).attr('data-filtrable');
    //                    if (value > ui.value) {
    //                        $(td).parent().show();
    //                    } else {
    //                        $(td).parent().hide();
    //                    }
    //                });
    //
    //                $("#profiler-threshold .value").html(ui.value + " ms");
    //            }
    //        });
    //    });
</script>